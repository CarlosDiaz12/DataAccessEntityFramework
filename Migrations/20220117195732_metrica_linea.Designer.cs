// <auto-generated />
using System;
using DAEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAEntity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220117195732_metrica_linea")]
    partial class metrica_linea
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BlogPostTag", b =>
                {
                    b.Property<int>("BlogPostsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BlogPostsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("BlogPostTag");
                });

            modelBuilder.Entity("DAEntity.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DAEntity.BlogPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("DAEntity.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("DAEntity.Metrica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Metricas");
                });

            modelBuilder.Entity("DAEntity.MetricaLinea", b =>
                {
                    b.Property<int>("LineaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MetricaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Meta")
                        .HasColumnType("TEXT");

                    b.HasKey("LineaId", "MetricaId");

                    b.HasIndex("MetricaId");

                    b.ToTable("MetricasLineas");
                });

            modelBuilder.Entity("DAEntity.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BlogPostTag", b =>
                {
                    b.HasOne("DAEntity.BlogPost", null)
                        .WithMany()
                        .HasForeignKey("BlogPostsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAEntity.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAEntity.BlogPost", b =>
                {
                    b.HasOne("DAEntity.Author", "Author")
                        .WithMany("BlogPosts")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DAEntity.MetricaLinea", b =>
                {
                    b.HasOne("DAEntity.Linea", "Linea")
                        .WithMany("MetricaLineas")
                        .HasForeignKey("LineaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAEntity.Metrica", "Metrica")
                        .WithMany("MetricaLineas")
                        .HasForeignKey("MetricaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Linea");

                    b.Navigation("Metrica");
                });

            modelBuilder.Entity("DAEntity.Author", b =>
                {
                    b.Navigation("BlogPosts");
                });

            modelBuilder.Entity("DAEntity.Linea", b =>
                {
                    b.Navigation("MetricaLineas");
                });

            modelBuilder.Entity("DAEntity.Metrica", b =>
                {
                    b.Navigation("MetricaLineas");
                });
#pragma warning restore 612, 618
        }
    }
}
